buildscript {
    repositories {
        mavenCentral()		
        mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")		
		classpath("org.codehaus.groovy:groovy:2.4.7")
		classpath("com.bertramlabs.plugins:asset-pipeline-gradle:2.12.1")
		classpath("gradle.plugin.com.boxfuse.client:flyway-release:4.0.3")			
    }
}

plugins {
    id 'com.craigburke.client-dependencies' version '1.3.1'
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'asset-pipeline'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'war'

war {
    baseName = 'boot-demo'
    version =  '0.1.0'
}

repositories {
    mavenCentral()	
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {    

    providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper' 
    compile("org.springframework.boot:spring-boot-starter-web")         
	
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("mysql:mysql-connector-java")
	compile("org.flywaydb:flyway-core:4.0.3")
		
    //compile("org.codehaus.groovy:groovy")
	compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.7'
    
	compile("com.bertramlabs.plugins:asset-pipeline-spring-boot:2.12.1")
	//compile("javax.inject:javax.inject:1")	
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: '2.8.5'
	
	assets 'com.craigburke.angular:angular-annotate-asset-pipeline:2.4.1'
	
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

clientDependencies {

	bower {
        'jquery'('2.2.x', from:'dist') { 
            include 'jquery.js'
			include 'jquery.min.js'
        }
		'materialize'('0.97.x', from:'dist', into:'materialize'){
			include "**"
		}		
		
    }
	
	npm {
		'angular'('1.5.x', into: 'angular') {
			include 'angular.js' 
			include 'angular.min.js'
		}
		'angular-resource'('1.5.x', into: 'angular') {
			include 'angular-resource.js'
			include 'angular-resource.min.js'
		}
		'angular-mocks'('1.5.x', into: 'angular') {
			include 'angular-mocks.js'
			include 'angular-mocks.min.js'
		}		
		'angular-ui-router'('0.2.18', into: 'angular'){
			include 'angular-ui-router.js'
			include 'angular-ui-router.min.js'
		}
		'angular-animate'('1.5.x', into: 'angular') {
			include 'angular-animate.js'
			include 'angular-animate.min.js'
		}
		'angular-cookies'('1.5.x', into: 'angular') {
			include 'angular-cookies.js'
			include 'angular-cookies.min.js'
		}
        
	}

	
}

assets {
  minifyJs = true
  minifyCss = true
  enableSourceMaps = true
  configOptions = [:]

  minifyOptions = [
    languageMode: 'ES5',
    targetLanguage: 'ES5', //Can go from ES6 to ES5 for those bleeding edgers
    optimizationLevel: 'SIMPLE',
    angularPass: true // Can use @ngInject annotation for Angular Apps
  ]

  //includes = []
  excludes = ['**/*.less'] //Example Exclude GLOB pattern

  //for plugin packaging
  packagePlugin=false //set to true if this is a library

  //developmentRuntime can be turned off
  //developmentRuntime=true
   
}

flyway {
    driver = 'com.mysql.jdbc.Driver'
    url = 'jdbc:mysql://localhost:3306/demo'
    user = 'root'
    password = 'root'    
}